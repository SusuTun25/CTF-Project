from flask import Flask, request, jsonify
from flask_cors import CORS
import subprocess

app = Flask(__name__)
CORS(app)  # This will allow all cross-origin requests

@app.route('/exploit', methods=['POST'])
def exploit():
    user_input = request.json.get('input')
    try:
        # Run the vulnerable C program with the provided user input
        result = subprocess.run(['./BinaryExploitation1BE'], 
                                input=user_input.encode(), 
                                stdout=subprocess.PIPE, 
                                stderr=subprocess.PIPE, 
                                check=False)  
        
         # Check if there was any error
        if result.returncode != 0:
            print(f"Program error: {result.stderr.decode()}")
            return jsonify({"message": "Program execution failed", "error": result.stderr.decode()}), 500
        
        # Capture stdout and stderr from the C program execution
        output = result.stdout.decode() if result.stdout else result.stderr.decode()
        print(f"Program output: {output}")
        return jsonify({"message": output})  # Send the output back to the frontend
    except Exception as e:
        return jsonify({"message": "An error occurred!"}), 500

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=5000)
