{"ast":null,"code":"var _jsxFileName = \"/Users/susutun/Desktop/CTF /src/challenges/CryptographyChallenge2.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\nimport ChallengeInterface from '../components/ChallengeInterface';\nimport challengeData from '../challengeData';\nimport SHA256 from 'crypto-js/sha256';\nimport Hex from 'crypto-js/enc-hex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptographyChallenge2 = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [amount, setAmount] = useState('');\n  const [recipient, setRecipient] = useState('');\n  const [transferToken, setTransferToken] = useState('');\n  const [serverResponse, setServerResponse] = useState('');\n  const [showFlag, setShowFlag] = useState(false);\n  const challenge = challengeData.cryptography.find(c => c.id === 'crypto2');\n\n  // Simulated server-side secret\n  const serverSecret = \"SuperSecretKey123!@#\";\n  const handleLogin = e => {\n    e.preventDefault();\n    if (username === 'regularUser' && password === 'password123') {\n      setLoggedIn(true);\n      setServerResponse(\"Login successful. You can now make transfers.\");\n    } else {\n      setServerResponse(\"Invalid credentials.\");\n    }\n  };\n  const generateTransferToken = (amount, recipient) => {\n    const data = `${amount}:${recipient}`;\n    const hash = SHA256(data + serverSecret).toString(Hex);\n    return `${data}:${hash}`;\n  };\n  const handleTransferRequest = e => {\n    e.preventDefault();\n    const token = generateTransferToken(amount, recipient);\n    setTransferToken(token);\n    setServerResponse(\"Transfer token generated. Please confirm the transfer.\");\n  };\n  const handleTransferConfirmation = e => {\n    e.preventDefault();\n    const [tokenAmount, tokenRecipient, tokenHash] = transferToken.split(':');\n    const data = `${tokenAmount}:${tokenRecipient}`;\n    const computedHash = SHA256(data + serverSecret).toString(Hex);\n    if (tokenHash === computedHash) {\n      const transferAmount = parseFloat(tokenAmount);\n      if (transferAmount <= 1000) {\n        setServerResponse(`Transfer of $${transferAmount} to ${tokenRecipient} successful!`);\n      } else {\n        if (transferAmount > 1000) {\n          setShowFlag(true);\n          setServerResponse(`Unusual activity detected! Transfer of $${transferAmount} to ${tokenRecipient} was attempted.`);\n        } else {\n          setServerResponse(\"Transfer failed. Amount exceeds the $1000 limit.\");\n        }\n      }\n    } else {\n      setServerResponse(\"Invalid transfer token.\");\n    }\n  };\n  const challengeContent = /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: challenge.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: challenge.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hint:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), \" \", challenge.hint]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), !loggedIn ? /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            placeholder: \"Enter username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Enter password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleTransferRequest,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Amount to transfer (max $1000):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              value: amount,\n              onChange: e => setAmount(e.target.value),\n              placeholder: \"Enter amount\",\n              max: \"1000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Recipient:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: recipient,\n              onChange: e => setRecipient(e.target.value),\n              placeholder: \"Enter recipient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Generate Transfer Token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), transferToken && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Generated Transfer Token:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: transferToken\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleTransferConfirmation,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Confirm Transfer Token:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: transferToken,\n                onChange: e => setTransferToken(e.target.value),\n                placeholder: \"Enter or modify the transfer token\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              type: \"submit\",\n              children: \"Confirm Transfer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), serverResponse && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: serverResponse.includes(\"successful\") ? \"success\" : \"danger\",\n        className: \"mt-3\",\n        children: serverResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), showFlag && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        className: \"mt-3\",\n        children: [\"Congratulations! You've successfully exploited the transfer system. The flag is: \", challenge.flag]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ChallengeInterface, {\n    challenge: challenge,\n    children: challengeContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptographyChallenge2, \"/7oVQvp5u62V8SgIP9vVKT96NQQ=\");\n_c = CryptographyChallenge2;\nexport default CryptographyChallenge2;\nvar _c;\n$RefreshReg$(_c, \"CryptographyChallenge2\");","map":{"version":3,"names":["React","useState","Card","Form","Button","Alert","ChallengeInterface","challengeData","SHA256","Hex","jsxDEV","_jsxDEV","CryptographyChallenge2","_s","username","setUsername","password","setPassword","loggedIn","setLoggedIn","amount","setAmount","recipient","setRecipient","transferToken","setTransferToken","serverResponse","setServerResponse","showFlag","setShowFlag","challenge","cryptography","find","c","id","serverSecret","handleLogin","e","preventDefault","generateTransferToken","data","hash","toString","handleTransferRequest","token","handleTransferConfirmation","tokenAmount","tokenRecipient","tokenHash","split","computedHash","transferAmount","parseFloat","challengeContent","className","children","Body","Title","title","fileName","_jsxFileName","lineNumber","columnNumber","Text","description","variant","hint","onSubmit","Group","Label","Control","type","value","onChange","target","placeholder","max","includes","flag","_c","$RefreshReg$"],"sources":["/Users/susutun/Desktop/CTF /src/challenges/CryptographyChallenge2.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\nimport ChallengeInterface from '../components/ChallengeInterface';\nimport challengeData from '../challengeData';\nimport SHA256 from 'crypto-js/sha256';\nimport Hex from 'crypto-js/enc-hex';\n\nconst CryptographyChallenge2 = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [amount, setAmount] = useState('');\n  const [recipient, setRecipient] = useState('');\n  const [transferToken, setTransferToken] = useState('');\n  const [serverResponse, setServerResponse] = useState('');\n  const [showFlag, setShowFlag] = useState(false);\n  \n  const challenge = challengeData.cryptography.find(c => c.id === 'crypto2');\n\n  // Simulated server-side secret\n  const serverSecret = \"SuperSecretKey123!@#\";\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    if (username === 'regularUser' && password === 'password123') {\n      setLoggedIn(true);\n      setServerResponse(\"Login successful. You can now make transfers.\");\n    } else {\n      setServerResponse(\"Invalid credentials.\");\n    }\n  };\n\n  const generateTransferToken = (amount, recipient) => {\n    const data = `${amount}:${recipient}`;\n    const hash = SHA256(data + serverSecret).toString(Hex);\n    return `${data}:${hash}`;\n  };\n\n  const handleTransferRequest = (e) => {\n    e.preventDefault();\n    const token = generateTransferToken(amount, recipient);\n    setTransferToken(token);\n    setServerResponse(\"Transfer token generated. Please confirm the transfer.\");\n  };\n\n  const handleTransferConfirmation = (e) => {\n    e.preventDefault();\n    const [tokenAmount, tokenRecipient, tokenHash] = transferToken.split(':');\n    const data = `${tokenAmount}:${tokenRecipient}`;\n    const computedHash = SHA256(data + serverSecret).toString(Hex);\n    \n    if (tokenHash === computedHash) {\n      const transferAmount = parseFloat(tokenAmount);\n      if (transferAmount <= 1000) {\n        setServerResponse(`Transfer of $${transferAmount} to ${tokenRecipient} successful!`);\n      } else {\n        if (transferAmount > 1000) {\n          setShowFlag(true);\n          setServerResponse(`Unusual activity detected! Transfer of $${transferAmount} to ${tokenRecipient} was attempted.`);\n        } else {\n          setServerResponse(\"Transfer failed. Amount exceeds the $1000 limit.\");\n        }\n      }\n    } else {\n      setServerResponse(\"Invalid transfer token.\");\n    }\n  };\n\n  const challengeContent = (\n    <Card className=\"mt-4\">\n      <Card.Body>\n        <Card.Title>{challenge.title}</Card.Title>\n        <Card.Text>{challenge.description}</Card.Text>\n        <Alert variant=\"info\">\n          <strong>Hint:</strong> {challenge.hint}\n        </Alert>\n        \n        {!loggedIn ? (\n          <Form onSubmit={handleLogin}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Username:</Form.Label>\n              <Form.Control \n                type=\"text\" \n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                placeholder=\"Enter username\"\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Password:</Form.Label>\n              <Form.Control \n                type=\"password\" \n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder=\"Enter password\"\n              />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Login\n            </Button>\n          </Form>\n        ) : (\n          <div>\n            <Form onSubmit={handleTransferRequest}>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Amount to transfer (max $1000):</Form.Label>\n                <Form.Control \n                  type=\"number\" \n                  value={amount}\n                  onChange={(e) => setAmount(e.target.value)}\n                  placeholder=\"Enter amount\"\n                  max=\"1000\"\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Recipient:</Form.Label>\n                <Form.Control \n                  type=\"text\" \n                  value={recipient}\n                  onChange={(e) => setRecipient(e.target.value)}\n                  placeholder=\"Enter recipient\"\n                />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Generate Transfer Token\n              </Button>\n            </Form>\n            \n            {transferToken && (\n              <div className=\"mt-3\">\n                <h5>Generated Transfer Token:</h5>\n                <p>{transferToken}</p>\n                <Form onSubmit={handleTransferConfirmation}>\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>Confirm Transfer Token:</Form.Label>\n                    <Form.Control \n                      type=\"text\" \n                      value={transferToken}\n                      onChange={(e) => setTransferToken(e.target.value)}\n                      placeholder=\"Enter or modify the transfer token\"\n                    />\n                  </Form.Group>\n                  <Button variant=\"success\" type=\"submit\">\n                    Confirm Transfer\n                  </Button>\n                </Form>\n              </div>\n            )}\n          </div>\n        )}\n        \n        {serverResponse && (\n          <Alert variant={serverResponse.includes(\"successful\") ? \"success\" : \"danger\"} className=\"mt-3\">\n            {serverResponse}\n          </Alert>\n        )}\n        \n        {showFlag && (\n          <Alert variant=\"success\" className=\"mt-3\">\n            Congratulations! You've successfully exploited the transfer system. The flag is: {challenge.flag}\n          </Alert>\n        )}\n      </Card.Body>\n    </Card>\n  );\n\n  return (\n    <ChallengeInterface challenge={challenge}>\n      {challengeContent}\n    </ChallengeInterface>\n  );\n};\n\nexport default CryptographyChallenge2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}