{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wilson\\\\CTF-Project\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Home from \"./pages/Home\";\nimport WebExploitation from \"./pages/WebExploitation\";\nimport Cryptography from \"./pages/Cryptography\";\nimport NetworkSecurity from \"./pages/NetworkSecurity\";\nimport ReverseEngineering from \"./pages/ReverseEngineering\";\nimport BinaryExploitation from \"./pages/BinaryExploitation\";\nimport ChallengeLanding from \"./pages/ChallengeLanding\";\nimport WebExploitationChallenges from \"./pages/WebExploitationChallenges\";\nimport ReverseEngineeringChallenges from \"./pages/ReverseEngineeringChallenges\";\nimport NetworkSecurityChallenges from \"./pages/NetworkSecurityChallenges\";\nimport BinaryExploitationChallenges from \"./pages/BinaryExploitationChallenges\";\nimport CryptographyChallenges from \"./pages/CryptographyChallenges\";\nimport ChallengePage from \"./components/ChallengePage\";\nimport challengeData from \"./challengeData\";\n// Helper function to convert camelCase to kebab-case\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst camelToKebabCase = string => {\n  return string.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, \"$1-$2\").toLowerCase();\n};\nconst challengeComponents = {\n  'web-1': WebExploitationChallenge1\n  // 'crypto-1': CryptographyChallenge1,\n  // Add other challenges here\n};\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/web-exploitation\",\n        element: /*#__PURE__*/_jsxDEV(WebExploitation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/web-exploitation/challenges\",\n        element: /*#__PURE__*/_jsxDEV(WebExploitationChallenges, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/reverse-engineering\",\n        element: /*#__PURE__*/_jsxDEV(ReverseEngineering, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/reverse-engineering/challenges\",\n        element: /*#__PURE__*/_jsxDEV(ReverseEngineeringChallenges, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/cryptography\",\n        element: /*#__PURE__*/_jsxDEV(Cryptography, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/cryptography/challenges\",\n        element: /*#__PURE__*/_jsxDEV(CryptographyChallenges, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/network-security\",\n        element: /*#__PURE__*/_jsxDEV(NetworkSecurity, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/network-security/challenges\",\n        element: /*#__PURE__*/_jsxDEV(NetworkSecurityChallenges, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/binary-exploitation\",\n        element: /*#__PURE__*/_jsxDEV(BinaryExploitation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/binary-exploitation/challenges\",\n        element: /*#__PURE__*/_jsxDEV(BinaryExploitationChallenges, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/challenge-landing\",\n        element: /*#__PURE__*/_jsxDEV(ChallengeLanding, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), Object.entries(challengeData).map(([category, challenges]) => challenges.map(challenge => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: `/${camelToKebabCase(category)}/challenges/${challenge.id}`,\n          element: /*#__PURE__*/_jsxDEV(ChallengePage, {\n            challenge: challenge\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)\n      }, challenge.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","Header","Home","WebExploitation","Cryptography","NetworkSecurity","ReverseEngineering","BinaryExploitation","ChallengeLanding","WebExploitationChallenges","ReverseEngineeringChallenges","NetworkSecurityChallenges","BinaryExploitationChallenges","CryptographyChallenges","ChallengePage","challengeData","jsxDEV","_jsxDEV","camelToKebabCase","string","replace","toLowerCase","challengeComponents","WebExploitationChallenge1","App","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","Object","entries","map","category","challenges","challenge","Fragment","id","_c","$RefreshReg$"],"sources":["C:/Users/Wilson/CTF-Project/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Home from \"./pages/Home\";\r\nimport WebExploitation from \"./pages/WebExploitation\";\r\nimport Cryptography from \"./pages/Cryptography\";\r\nimport NetworkSecurity from \"./pages/NetworkSecurity\";\r\nimport ReverseEngineering from \"./pages/ReverseEngineering\";\r\nimport BinaryExploitation from \"./pages/BinaryExploitation\";\r\nimport ChallengeLanding from \"./pages/ChallengeLanding\";\r\nimport WebExploitationChallenges from \"./pages/WebExploitationChallenges\";\r\nimport ReverseEngineeringChallenges from \"./pages/ReverseEngineeringChallenges\";\r\nimport NetworkSecurityChallenges from \"./pages/NetworkSecurityChallenges\";\r\nimport BinaryExploitationChallenges from \"./pages/BinaryExploitationChallenges\";\r\nimport CryptographyChallenges from \"./pages/CryptographyChallenges\";\r\nimport ChallengePage from \"./components/ChallengePage\";\r\nimport challengeData from \"./challengeData\";\r\n// Helper function to convert camelCase to kebab-case\r\nconst camelToKebabCase = (string) => {\r\n  return string.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, \"$1-$2\").toLowerCase();\r\n};\r\n\r\nconst challengeComponents = {\r\n  'web-1': WebExploitationChallenge1,\r\n  // 'crypto-1': CryptographyChallenge1,\r\n  // Add other challenges here\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/web-exploitation\" element={<WebExploitation />} />\r\n        <Route\r\n          path=\"/web-exploitation/challenges\"\r\n          element={<WebExploitationChallenges />}\r\n        />\r\n        <Route path=\"/reverse-engineering\" element={<ReverseEngineering />} />\r\n        <Route\r\n          path=\"/reverse-engineering/challenges\"\r\n          element={<ReverseEngineeringChallenges />}\r\n        />\r\n        <Route path=\"/cryptography\" element={<Cryptography />} />\r\n        <Route\r\n          path=\"/cryptography/challenges\"\r\n          element={<CryptographyChallenges />}\r\n        />\r\n        <Route path=\"/network-security\" element={<NetworkSecurity />} />\r\n        <Route\r\n          path=\"/network-security/challenges\"\r\n          element={<NetworkSecurityChallenges />}\r\n        />\r\n        <Route path=\"/binary-exploitation\" element={<BinaryExploitation />} />\r\n        <Route\r\n          path=\"/binary-exploitation/challenges\"\r\n          element={<BinaryExploitationChallenges />}\r\n        />\r\n        <Route path=\"/challenge-landing\" element={<ChallengeLanding />} />\r\n\r\n        {/* Dynamic routes for individual challenges */}\r\n        {Object.entries(challengeData).map(([category, challenges]) =>\r\n          challenges.map((challenge) => (\r\n            <React.Fragment key={challenge.id}>\r\n              <Route\r\n                path={`/${camelToKebabCase(category)}/challenges/${challenge.id}`}\r\n                element={<ChallengePage challenge={challenge} />}\r\n              />\r\n            </React.Fragment>\r\n          ))\r\n        )}\r\n\r\n        {/* {Object.entries(challengeData).map(([category, challenges]) =>\r\n          challenges.map((challenge) => {\r\n            const ChallengeComponent = challengeComponents[challenge.id];\r\n            // Check if the component exists\r\n            if (!ChallengeComponent) {\r\n              console.error(`No component found for challenge ID: ${challenge.id}`);\r\n              return null; // Skip this route if no component is found\r\n            }\r\n            return (\r\n              <Route\r\n                key={challenge.id}\r\n                path={`/${camelToKebabCase(category)}/challenges/${challenge.id}/view`}\r\n                element={<ChallengeComponent />}\r\n              />\r\n            );\r\n          })\r\n        )} */}\r\n\r\n       \r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,kBAAkB,MAAM,4BAA4B;AAC3D,OAAOC,kBAAkB,MAAM,4BAA4B;AAC3D,OAAOC,gBAAgB,MAAM,0BAA0B;AACvD,OAAOC,yBAAyB,MAAM,mCAAmC;AACzE,OAAOC,4BAA4B,MAAM,sCAAsC;AAC/E,OAAOC,yBAAyB,MAAM,mCAAmC;AACzE,OAAOC,4BAA4B,MAAM,sCAAsC;AAC/E,OAAOC,sBAAsB,MAAM,gCAAgC;AACnE,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;EACnC,OAAOA,MAAM,CAACC,OAAO,CAAC,8BAA8B,EAAE,OAAO,CAAC,CAACC,WAAW,CAAC,CAAC;AAC9E,CAAC;AAED,MAAMC,mBAAmB,GAAG;EAC1B,OAAO,EAAEC;EACT;EACA;AACF,CAAC;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACEP,OAAA,CAACnB,MAAM;IAAA2B,QAAA,gBACLR,OAAA,CAAChB,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVZ,OAAA,CAACjB,MAAM;MAAAyB,QAAA,gBACLR,OAAA,CAAClB,KAAK;QAAC+B,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEd,OAAA,CAACf,IAAI;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrCZ,OAAA,CAAClB,KAAK;QAAC+B,IAAI,EAAC,mBAAmB;QAACC,OAAO,eAAEd,OAAA,CAACd,eAAe;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChEZ,OAAA,CAAClB,KAAK;QACJ+B,IAAI,EAAC,8BAA8B;QACnCC,OAAO,eAAEd,OAAA,CAACR,yBAAyB;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACFZ,OAAA,CAAClB,KAAK;QAAC+B,IAAI,EAAC,sBAAsB;QAACC,OAAO,eAAEd,OAAA,CAACX,kBAAkB;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtEZ,OAAA,CAAClB,KAAK;QACJ+B,IAAI,EAAC,iCAAiC;QACtCC,OAAO,eAAEd,OAAA,CAACP,4BAA4B;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFZ,OAAA,CAAClB,KAAK;QAAC+B,IAAI,EAAC,eAAe;QAACC,OAAO,eAAEd,OAAA,CAACb,YAAY;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzDZ,OAAA,CAAClB,KAAK;QACJ+B,IAAI,EAAC,0BAA0B;QAC/BC,OAAO,eAAEd,OAAA,CAACJ,sBAAsB;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACFZ,OAAA,CAAClB,KAAK;QAAC+B,IAAI,EAAC,mBAAmB;QAACC,OAAO,eAAEd,OAAA,CAACZ,eAAe;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChEZ,OAAA,CAAClB,KAAK;QACJ+B,IAAI,EAAC,8BAA8B;QACnCC,OAAO,eAAEd,OAAA,CAACN,yBAAyB;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACFZ,OAAA,CAAClB,KAAK;QAAC+B,IAAI,EAAC,sBAAsB;QAACC,OAAO,eAAEd,OAAA,CAACV,kBAAkB;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtEZ,OAAA,CAAClB,KAAK;QACJ+B,IAAI,EAAC,iCAAiC;QACtCC,OAAO,eAAEd,OAAA,CAACL,4BAA4B;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFZ,OAAA,CAAClB,KAAK;QAAC+B,IAAI,EAAC,oBAAoB;QAACC,OAAO,eAAEd,OAAA,CAACT,gBAAgB;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAGjEG,MAAM,CAACC,OAAO,CAAClB,aAAa,CAAC,CAACmB,GAAG,CAAC,CAAC,CAACC,QAAQ,EAAEC,UAAU,CAAC,KACxDA,UAAU,CAACF,GAAG,CAAEG,SAAS,iBACvBpB,OAAA,CAACrB,KAAK,CAAC0C,QAAQ;QAAAb,QAAA,eACbR,OAAA,CAAClB,KAAK;UACJ+B,IAAI,EAAE,IAAIZ,gBAAgB,CAACiB,QAAQ,CAAC,eAAeE,SAAS,CAACE,EAAE,EAAG;UAClER,OAAO,eAAEd,OAAA,CAACH,aAAa;YAACuB,SAAS,EAAEA;UAAU;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD;MAAC,GAJiBQ,SAAS,CAACE,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKjB,CACjB,CACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAqBK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACW,EAAA,GAnEIhB,GAAG;AAqET,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}