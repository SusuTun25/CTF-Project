{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wilson\\\\CTF-Project\\\\src\\\\challenges\\\\ReverseEngineeringChallenge2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\nimport ChallengeInterface from '../components/ChallengeInterface';\nimport challengeData from '../challengeData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReverseEngineeringChallenge2 = () => {\n  _s();\n  const [userToken, setUserToken] = useState('');\n  const [adminAttemptToken, setAdminAttemptToken] = useState('');\n  const [output, setOutput] = useState('');\n  const [apiResponses, setApiResponses] = useState([]);\n  const challenge = challengeData.reverseEngineering.find(c => c.id === 'rev2');\n\n  // Example token generation code\n  const sampleCode = `\n# Token Generation Sample (Python)\nimport base64\nimport hashlib\nimport time\n\ndef rot13(text):\n    result = \"\"\n    for char in text:\n        if char.isalpha():\n            ascii_offset = ord('A') if char.isupper() else ord('a')\n            result += chr((ord(char) - ascii_offset + 13) % 26 + ascii_offset)\n        else:\n            result += char\n    return result\n\ndef generate_token(username, role):\n    timestamp = int(time.time())\n    \n    # Create token payload\n    payload = f\"{username}:{role}:{timestamp}\"\n    \n    # First layer: ROT13\n    encoded = rot13(payload)\n    \n    # Second layer: Base64\n    encoded = base64.b64encode(encoded.encode()).decode()\n    \n    # Generate signature (MD5 of encoded payload)\n    signature = hashlib.md5(encoded.encode()).hexdigest()\n    \n    # Combine payload and signature\n    return f\"{encoded}.{signature}\"\n\n# Example usage:\ntoken = generate_token(\"user123\", \"user\")\nprint(token)\n\n# To verify:\n# 1. Split token into payload and signature\n# 2. Calculate MD5 of payload\n# 3. Compare with provided signature\n`;\n\n  // Sample API responses\n  const apiEndpoints = `\nAvailable API Endpoints:\n\nPOST /api/login\nRequest:\n{\n    \"username\": \"string\",\n    \"password\": \"string\"\n}\nResponse:\n{\n    \"token\": \"string\",\n    \"role\": \"string\"\n}\n\nGET /api/user\nHeaders:\n    Authorization: Bearer <token>\nResponse:\n{\n    \"username\": \"string\",\n    \"role\": \"string\"\n}\n\nGET /api/admin\nHeaders:\n    Authorization: Bearer <token>\nResponse:\n{\n    \"flag\": \"string\"  // Only accessible with admin token\n}\n`;\n  useEffect(() => {\n    // Generate sample user token on component mount\n    const generateSampleToken = () => {\n      const username = \"user123\";\n      const role = \"user\";\n      const timestamp = Math.floor(Date.now() / 1000);\n\n      // Base payload\n      const payload = `${username}:${role}:${timestamp}`;\n\n      // ROT13\n      const rot13Encoded = payload.replace(/[a-zA-Z]/g, c => String.fromCharCode((c <= 'Z' ? 90 : 122) >= (c = c.charCodeAt(0) + 13) ? c : c - 26));\n\n      // Base64\n      const base64Encoded = btoa(rot13Encoded);\n\n      // MD5 (simplified for demo)\n      const signature = Array.from(base64Encoded).reduce((hash, char) => (hash << 5) - hash + char.charCodeAt(0) | 0, 0).toString(16);\n      const token = `${base64Encoded}.${signature}`;\n      setUserToken(token);\n      addApiResponse('POST /api/login', 'Success', {\n        token,\n        role: 'user'\n      });\n    };\n    generateSampleToken();\n  }, []);\n  const handleTokenSubmit = e => {\n    e.preventDefault();\n    try {\n      // Verify token format\n      const [payload, signature] = adminAttemptToken.split('.');\n\n      // Decode payload\n      const decodedPayload = atob(payload);\n\n      // ROT13 decode\n      const rot13Decoded = decodedPayload.replace(/[a-zA-Z]/g, c => String.fromCharCode((c <= 'Z' ? 90 : 122) >= (c = c.charCodeAt(0) + 13) ? c : c - 26));\n\n      // Parse token parts\n      const [username, role, timestamp] = rot13Decoded.split(':');\n      addApiResponse('GET /api/admin', 'Request', {\n        token: adminAttemptToken\n      });\n\n      // Verify it's a properly formatted admin token\n      if (role === 'admin') {\n        // Calculate expected signature\n        const expectedSignature = Array.from(payload).reduce((hash, char) => (hash << 5) - hash + char.charCodeAt(0) | 0, 0).toString(16);\n        if (signature === expectedSignature) {\n          setOutput(`Congratulations! Admin access granted.\\n\\nFlag: CTF{ADVANCED_MALWARE_DISSECTED}`);\n          addApiResponse('GET /api/admin', 'Success', {\n            flag: 'CTF{ADVANCED_MALWARE_DISSECTED}'\n          });\n        } else {\n          setOutput('Invalid signature. Token tampering detected.');\n          addApiResponse('GET /api/admin', 'Error', {\n            message: 'Invalid signature'\n          });\n        }\n      } else {\n        setOutput('Access denied. Admin role required.');\n        addApiResponse('GET /api/admin', 'Error', {\n          message: 'Insufficient privileges'\n        });\n      }\n    } catch (error) {\n      setOutput(`Token parsing error: ${error.message}`);\n      addApiResponse('GET /api/admin', 'Error', {\n        message: 'Token parsing error'\n      });\n    }\n  };\n  const addApiResponse = (endpoint, status, data) => {\n    setApiResponses(prev => [...prev, {\n      timestamp: new Date().toISOString(),\n      endpoint,\n      status,\n      data: JSON.stringify(data, null, 2)\n    }]);\n  };\n  const challengeContent = /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: challenge.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: challenge.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hint:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), \" \", challenge.hint]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"API Documentation:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          backgroundColor: '#f8f9fa',\n          padding: '15px',\n          borderRadius: '5px',\n          maxHeight: '200px',\n          overflow: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: apiEndpoints\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Sample Token Generation Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          backgroundColor: '#1e1e1e',\n          color: '#d4d4d4',\n          padding: '15px',\n          borderRadius: '5px',\n          maxHeight: '400px',\n          overflow: 'auto',\n          fontFamily: 'Consolas, monospace'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: sampleCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Current User Token:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          backgroundColor: '#f8f9fa',\n          padding: '10px',\n          borderRadius: '5px'\n        },\n        children: userToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleTokenSubmit,\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter Admin Token:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: adminAttemptToken,\n            onChange: e => setAdminAttemptToken(e.target.value),\n            placeholder: \"Enter your forged admin token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Access Admin API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), output && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: output.includes('CTF{') ? 'success' : 'danger',\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mt-3\",\n        children: \"API Request Log:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8f9fa',\n          padding: '15px',\n          borderRadius: '5px',\n          maxHeight: '200px',\n          overflow: 'auto'\n        },\n        children: apiResponses.map((response, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: response.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: response.endpoint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), \" - \", response.status, /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              marginBottom: 0\n            },\n            children: response.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ChallengeInterface, {\n    challenge: challenge,\n    children: challengeContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(ReverseEngineeringChallenge2, \"bhFwl6KN5spgSHSsDI0BuxMEHxM=\");\n_c = ReverseEngineeringChallenge2;\nexport default ReverseEngineeringChallenge2;\nvar _c;\n$RefreshReg$(_c, \"ReverseEngineeringChallenge2\");","map":{"version":3,"names":["React","useState","useEffect","Card","Form","Button","Alert","ChallengeInterface","challengeData","jsxDEV","_jsxDEV","ReverseEngineeringChallenge2","_s","userToken","setUserToken","adminAttemptToken","setAdminAttemptToken","output","setOutput","apiResponses","setApiResponses","challenge","reverseEngineering","find","c","id","sampleCode","apiEndpoints","generateSampleToken","username","role","timestamp","Math","floor","Date","now","payload","rot13Encoded","replace","String","fromCharCode","charCodeAt","base64Encoded","btoa","signature","Array","from","reduce","hash","char","toString","token","addApiResponse","handleTokenSubmit","e","preventDefault","split","decodedPayload","atob","rot13Decoded","expectedSignature","flag","message","error","endpoint","status","data","prev","toISOString","JSON","stringify","challengeContent","className","children","Body","Title","title","fileName","_jsxFileName","lineNumber","columnNumber","Text","description","variant","hint","style","backgroundColor","padding","borderRadius","maxHeight","overflow","color","fontFamily","onSubmit","Group","Label","Control","type","value","onChange","target","placeholder","includes","map","response","index","marginBottom","_c","$RefreshReg$"],"sources":["C:/Users/Wilson/CTF-Project/src/challenges/ReverseEngineeringChallenge2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\r\nimport ChallengeInterface from '../components/ChallengeInterface';\r\nimport challengeData from '../challengeData';\r\n\r\nconst ReverseEngineeringChallenge2 = () => {\r\n  const [userToken, setUserToken] = useState('');\r\n  const [adminAttemptToken, setAdminAttemptToken] = useState('');\r\n  const [output, setOutput] = useState('');\r\n  const [apiResponses, setApiResponses] = useState([]);\r\n  \r\n  const challenge = challengeData.reverseEngineering.find(c => c.id === 'rev2');\r\n\r\n  // Example token generation code\r\n  const sampleCode = `\r\n# Token Generation Sample (Python)\r\nimport base64\r\nimport hashlib\r\nimport time\r\n\r\ndef rot13(text):\r\n    result = \"\"\r\n    for char in text:\r\n        if char.isalpha():\r\n            ascii_offset = ord('A') if char.isupper() else ord('a')\r\n            result += chr((ord(char) - ascii_offset + 13) % 26 + ascii_offset)\r\n        else:\r\n            result += char\r\n    return result\r\n\r\ndef generate_token(username, role):\r\n    timestamp = int(time.time())\r\n    \r\n    # Create token payload\r\n    payload = f\"{username}:{role}:{timestamp}\"\r\n    \r\n    # First layer: ROT13\r\n    encoded = rot13(payload)\r\n    \r\n    # Second layer: Base64\r\n    encoded = base64.b64encode(encoded.encode()).decode()\r\n    \r\n    # Generate signature (MD5 of encoded payload)\r\n    signature = hashlib.md5(encoded.encode()).hexdigest()\r\n    \r\n    # Combine payload and signature\r\n    return f\"{encoded}.{signature}\"\r\n\r\n# Example usage:\r\ntoken = generate_token(\"user123\", \"user\")\r\nprint(token)\r\n\r\n# To verify:\r\n# 1. Split token into payload and signature\r\n# 2. Calculate MD5 of payload\r\n# 3. Compare with provided signature\r\n`;\r\n\r\n  // Sample API responses\r\n  const apiEndpoints = `\r\nAvailable API Endpoints:\r\n\r\nPOST /api/login\r\nRequest:\r\n{\r\n    \"username\": \"string\",\r\n    \"password\": \"string\"\r\n}\r\nResponse:\r\n{\r\n    \"token\": \"string\",\r\n    \"role\": \"string\"\r\n}\r\n\r\nGET /api/user\r\nHeaders:\r\n    Authorization: Bearer <token>\r\nResponse:\r\n{\r\n    \"username\": \"string\",\r\n    \"role\": \"string\"\r\n}\r\n\r\nGET /api/admin\r\nHeaders:\r\n    Authorization: Bearer <token>\r\nResponse:\r\n{\r\n    \"flag\": \"string\"  // Only accessible with admin token\r\n}\r\n`;\r\n\r\n  useEffect(() => {\r\n    // Generate sample user token on component mount\r\n    const generateSampleToken = () => {\r\n      const username = \"user123\";\r\n      const role = \"user\";\r\n      const timestamp = Math.floor(Date.now() / 1000);\r\n      \r\n      // Base payload\r\n      const payload = `${username}:${role}:${timestamp}`;\r\n      \r\n      // ROT13\r\n      const rot13Encoded = payload.replace(/[a-zA-Z]/g, c => \r\n        String.fromCharCode((c <= 'Z' ? 90 : 122) >= (c = c.charCodeAt(0) + 13) ? c : c - 26)\r\n      );\r\n      \r\n      // Base64\r\n      const base64Encoded = btoa(rot13Encoded);\r\n      \r\n      // MD5 (simplified for demo)\r\n      const signature = Array.from(base64Encoded)\r\n        .reduce((hash, char) => (((hash << 5) - hash) + char.charCodeAt(0))|0, 0)\r\n        .toString(16);\r\n      \r\n      const token = `${base64Encoded}.${signature}`;\r\n      setUserToken(token);\r\n      addApiResponse('POST /api/login', 'Success', { token, role: 'user' });\r\n    };\r\n\r\n    generateSampleToken();\r\n  }, []);\r\n\r\n  const handleTokenSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      // Verify token format\r\n      const [payload, signature] = adminAttemptToken.split('.');\r\n      \r\n      // Decode payload\r\n      const decodedPayload = atob(payload);\r\n      \r\n      // ROT13 decode\r\n      const rot13Decoded = decodedPayload.replace(/[a-zA-Z]/g, c =>\r\n        String.fromCharCode((c <= 'Z' ? 90 : 122) >= (c = c.charCodeAt(0) + 13) ? c : c - 26)\r\n      );\r\n      \r\n      // Parse token parts\r\n      const [username, role, timestamp] = rot13Decoded.split(':');\r\n      \r\n      addApiResponse('GET /api/admin', 'Request', { token: adminAttemptToken });\r\n\r\n      // Verify it's a properly formatted admin token\r\n      if (role === 'admin') {\r\n        // Calculate expected signature\r\n        const expectedSignature = Array.from(payload)\r\n          .reduce((hash, char) => (((hash << 5) - hash) + char.charCodeAt(0))|0, 0)\r\n          .toString(16);\r\n\r\n        if (signature === expectedSignature) {\r\n          setOutput(`Congratulations! Admin access granted.\\n\\nFlag: CTF{ADVANCED_MALWARE_DISSECTED}`);\r\n          addApiResponse('GET /api/admin', 'Success', { flag: 'CTF{ADVANCED_MALWARE_DISSECTED}' });\r\n        } else {\r\n          setOutput('Invalid signature. Token tampering detected.');\r\n          addApiResponse('GET /api/admin', 'Error', { message: 'Invalid signature' });\r\n        }\r\n      } else {\r\n        setOutput('Access denied. Admin role required.');\r\n        addApiResponse('GET /api/admin', 'Error', { message: 'Insufficient privileges' });\r\n      }\r\n    } catch (error) {\r\n      setOutput(`Token parsing error: ${error.message}`);\r\n      addApiResponse('GET /api/admin', 'Error', { message: 'Token parsing error' });\r\n    }\r\n  };\r\n\r\n  const addApiResponse = (endpoint, status, data) => {\r\n    setApiResponses(prev => [...prev, {\r\n      timestamp: new Date().toISOString(),\r\n      endpoint,\r\n      status,\r\n      data: JSON.stringify(data, null, 2)\r\n    }]);\r\n  };\r\n\r\n  const challengeContent = (\r\n    <Card className=\"mt-4\">\r\n      <Card.Body>\r\n        <Card.Title>{challenge.title}</Card.Title>\r\n        <Card.Text>{challenge.description}</Card.Text>\r\n        <Alert variant=\"info\">\r\n          <strong>Hint:</strong> {challenge.hint}\r\n        </Alert>\r\n        \r\n        <h5>API Documentation:</h5>\r\n        <pre style={{\r\n          backgroundColor: '#f8f9fa',\r\n          padding: '15px',\r\n          borderRadius: '5px',\r\n          maxHeight: '200px',\r\n          overflow: 'auto'\r\n        }}>\r\n          <code>{apiEndpoints}</code>\r\n        </pre>\r\n\r\n        <h5>Sample Token Generation Code:</h5>\r\n        <pre style={{\r\n          backgroundColor: '#1e1e1e',\r\n          color: '#d4d4d4',\r\n          padding: '15px',\r\n          borderRadius: '5px',\r\n          maxHeight: '400px',\r\n          overflow: 'auto',\r\n          fontFamily: 'Consolas, monospace'\r\n        }}>\r\n          <code>{sampleCode}</code>\r\n        </pre>\r\n\r\n        <h5>Current User Token:</h5>\r\n        <pre style={{ backgroundColor: '#f8f9fa', padding: '10px', borderRadius: '5px' }}>\r\n          {userToken}\r\n        </pre>\r\n        \r\n        <Form onSubmit={handleTokenSubmit} className=\"mt-3\">\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Enter Admin Token:</Form.Label>\r\n            <Form.Control \r\n              type=\"text\" \r\n              value={adminAttemptToken}\r\n              onChange={(e) => setAdminAttemptToken(e.target.value)}\r\n              placeholder=\"Enter your forged admin token\"\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Access Admin API\r\n          </Button>\r\n        </Form>\r\n        \r\n        {output && (\r\n          <Alert variant={output.includes('CTF{') ? 'success' : 'danger'} className=\"mt-3\">\r\n            <pre>{output}</pre>\r\n          </Alert>\r\n        )}\r\n\r\n        <h5 className=\"mt-3\">API Request Log:</h5>\r\n        <div style={{ \r\n          backgroundColor: '#f8f9fa', \r\n          padding: '15px', \r\n          borderRadius: '5px',\r\n          maxHeight: '200px',\r\n          overflow: 'auto'\r\n        }}>\r\n          {apiResponses.map((response, index) => (\r\n            <div key={index} className=\"mb-2\">\r\n              <strong>{response.timestamp}</strong>\r\n              <br />\r\n              <strong>{response.endpoint}</strong> - {response.status}\r\n              <pre style={{ marginBottom: 0 }}>{response.data}</pre>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <ChallengeInterface challenge={challenge}>\r\n      {challengeContent}\r\n    </ChallengeInterface>\r\n  );\r\n};\r\n\r\nexport default ReverseEngineeringChallenge2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}