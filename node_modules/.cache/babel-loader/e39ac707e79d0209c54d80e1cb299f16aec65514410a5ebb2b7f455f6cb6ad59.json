{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wilson\\\\CTF-Project\\\\src\\\\challenges\\\\ReverseEngineeringChallenge1.js\";\nimport challengeData from \"../challengeData\";\nimport ChallengeInterface from \"../components/ChallengeInterface\";\nimport { Card } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReverseEngineeringChallenge1 = () => {\n  const challenge = challengeData.reverseEngineering.find(c => c.id === \"rev1\");\n  const handleDownload = () => {\n    // Specify the path to your ZIP file\n    const url = \"./phantom_test.zip\"; // Adjust the path accordingly\n\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'phantom.zip'); // Specify the name of the file\n\n    // Append to the document\n    document.body.appendChild(link);\n    link.click();\n\n    // Clean up and remove the link\n    link.parentNode.removeChild(link);\n  };\n  const challengeContent = /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"text-center mb-4\",\n        children: \"Phantom's Recruit Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your task is to reverse engineer the provided binary and find the hidden flag within it. Use your reverse engineering skills to analyze the program's behavior and structure.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleDownload,\n          children: \"Download Challenge Binary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n  return challenge ? /*#__PURE__*/_jsxDEV(ChallengeInterface, {\n    challenge: challenge,\n    children: challengeContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Challenge not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c = ReverseEngineeringChallenge1;\nexport default ReverseEngineeringChallenge1;\nvar _c;\n$RefreshReg$(_c, \"ReverseEngineeringChallenge1\");","map":{"version":3,"names":["challengeData","ChallengeInterface","Card","Button","jsxDEV","_jsxDEV","ReverseEngineeringChallenge1","challenge","reverseEngineering","find","c","id","handleDownload","url","link","document","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","challengeContent","className","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Wilson/CTF-Project/src/challenges/ReverseEngineeringChallenge1.js"],"sourcesContent":["import challengeData from \"../challengeData\";\r\nimport ChallengeInterface from \"../components/ChallengeInterface\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst ReverseEngineeringChallenge1 = () => {\r\n  const challenge = challengeData.reverseEngineering.find(\r\n    (c) => c.id === \"rev1\"\r\n  );\r\n  const handleDownload = () => {\r\n    // Specify the path to your ZIP file\r\n    const url = \"./phantom_test.zip\"; // Adjust the path accordingly\r\n\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.setAttribute('download', 'phantom.zip'); // Specify the name of the file\r\n\r\n    // Append to the document\r\n    document.body.appendChild(link);\r\n    link.click();\r\n\r\n    // Clean up and remove the link\r\n    link.parentNode.removeChild(link);\r\n  };\r\n\r\n  const challengeContent = (\r\n    <Card className=\"mt-4\">\r\n      <Card.Body>\r\n        <Card.Title className=\"text-center mb-4\">\r\n          Phantom's Recruit Test\r\n        </Card.Title>\r\n        <p>\r\n          Your task is to reverse engineer the provided binary and find the\r\n          hidden flag within it. Use your reverse engineering skills to analyze\r\n          the program's behavior and structure.\r\n        </p>\r\n        <div className=\"mt-3\">\r\n\r\n          <Button variant=\"primary\" onClick={handleDownload}>\r\n            Download Challenge Binary\r\n          </Button>\r\n         \r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n\r\n  return challenge ? (\r\n    <ChallengeInterface challenge={challenge}>\r\n      {challengeContent}\r\n    </ChallengeInterface>\r\n  ) : (\r\n    <div>Challenge not found</div>\r\n  );\r\n};\r\n\r\nexport default ReverseEngineeringChallenge1;\r\n"],"mappings":";AAAA,OAAOA,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,kBAAkB,MAAM,kCAAkC;AACjE,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,4BAA4B,GAAGA,CAAA,KAAM;EACzC,MAAMC,SAAS,GAAGP,aAAa,CAACQ,kBAAkB,CAACC,IAAI,CACpDC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAK,MAClB,CAAC;EACD,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACA,MAAMC,GAAG,GAAG,oBAAoB,CAAC,CAAC;;IAElC,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGJ,GAAG;IACfC,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC,CAAC;;IAE9C;IACAH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;IAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;;IAEZ;IACAP,IAAI,CAACQ,UAAU,CAACC,WAAW,CAACT,IAAI,CAAC;EACnC,CAAC;EAED,MAAMU,gBAAgB,gBACpBnB,OAAA,CAACH,IAAI;IAACuB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACpBrB,OAAA,CAACH,IAAI,CAACyB,IAAI;MAAAD,QAAA,gBACRrB,OAAA,CAACH,IAAI,CAAC0B,KAAK;QAACH,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAEzC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACb3B,OAAA;QAAAqB,QAAA,EAAG;MAIH;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJ3B,OAAA;QAAKoB,SAAS,EAAC,MAAM;QAAAC,QAAA,eAEnBrB,OAAA,CAACF,MAAM;UAAC8B,OAAO,EAAC,SAAS;UAACC,OAAO,EAAEtB,cAAe;UAAAc,QAAA,EAAC;QAEnD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CACP;EAED,OAAOzB,SAAS,gBACdF,OAAA,CAACJ,kBAAkB;IAACM,SAAS,EAAEA,SAAU;IAAAmB,QAAA,EACtCF;EAAgB;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC,gBAErB3B,OAAA;IAAAqB,QAAA,EAAK;EAAmB;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAC9B;AACH,CAAC;AAACG,EAAA,GAjDI7B,4BAA4B;AAmDlC,eAAeA,4BAA4B;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}