{"ast":null,"code":"const challengeData = {\n  \"webExploitation\": [{\n    \"id\": \"web1\",\n    \"title\": \"Log Me In\",\n    \"description\": \"Can you exploit this simple login form to gain unauthorized access?\",\n    \"hint\": \"Try inputting special characters in the username field.\",\n    \"flag\": \"CTF{sql_injection_mastered}\",\n    \"component\": 'WebExploitationChallenge1',\n    \"difficulty\": \"Easy\",\n    \"points\": 100\n  }],\n  \"cryptography\": [{\n    \"id\": \"crypto1\",\n    \"title\": \"Khoor's Secret\",\n    \"description\": \"Decrypt this message that was encrypted using a Caesar cipher.\",\n    \"hint\": \"The shift used is equal to the atomic number of Carbon.\",\n    \"flag\": \"CTF{hail_caesar}\",\n    \"difficulty\": \"Easy\",\n    \"points\": 100\n  }],\n  \"networkSecurity\": [{\n    \"id\": \"net1\",\n    \"title\": \"Packet Sniffing 101\",\n    \"description\": \"Analyze this pcap file to find the hidden flag.\",\n    \"hint\": \"Look for unencrypted HTTP traffic.\",\n    \"flag\": \"CTF{wireshark_pro}\"\n  }],\n  \"reverseEngineering\": [{\n    \"id\": \"rev1\",\n    \"title\": \"Assembly Basics\",\n    \"description\": \"Reverse engineer this simple x86 assembly code to find the flag.\",\n    \"hint\": \"Pay attention to the comparison before the jump instruction.\",\n    \"flag\": \"CTF{asm_master}\"\n  }],\n  \"binaryExploitation\": [{\n    \"id\": \"bin1\",\n    \"title\": \"Buffer Overflow 101\",\n    \"description\": \"Exploit this program's buffer to gain a shell.\",\n    \"hint\": \"The buffer is 64 bytes long. What happens if you write more?\",\n    \"flag\": \"CTF{stack_smashed}\"\n  }]\n};\nexport default challengeData;","map":{"version":3,"names":["challengeData"],"sources":["/Users/susutun/Desktop/CTF /src/challengeData.js"],"sourcesContent":["const challengeData = {\n    \"webExploitation\": [\n      {\n        \"id\": \"web1\",\n        \"title\": \"Log Me In\",\n        \"description\": \"Can you exploit this simple login form to gain unauthorized access?\",\n        \"hint\": \"Try inputting special characters in the username field.\",\n        \"flag\": \"CTF{sql_injection_mastered}\",\n        \"component\": 'WebExploitationChallenge1',\n        \"difficulty\": \"Easy\",\n        \"points\":100\n\n      },\n     \n    ],\n    \"cryptography\": [\n      {\n        \"id\": \"crypto1\",\n        \"title\": \"Khoor's Secret\",\n        \"description\": \"Decrypt this message that was encrypted using a Caesar cipher.\",\n        \"hint\": \"The shift used is equal to the atomic number of Carbon.\",\n        \"flag\": \"CTF{hail_caesar}\",\n        \"difficulty\": \"Easy\",\n        \"points\":100\n      },\n     \n    ],\n    \"networkSecurity\": [\n      {\n        \"id\": \"net1\",\n        \"title\": \"Packet Sniffing 101\",\n        \"description\": \"Analyze this pcap file to find the hidden flag.\",\n        \"hint\": \"Look for unencrypted HTTP traffic.\",\n        \"flag\": \"CTF{wireshark_pro}\"\n      }\n    ],\n    \"reverseEngineering\": [\n      {\n        \"id\": \"rev1\",\n        \"title\": \"Assembly Basics\",\n        \"description\": \"Reverse engineer this simple x86 assembly code to find the flag.\",\n        \"hint\": \"Pay attention to the comparison before the jump instruction.\",\n        \"flag\": \"CTF{asm_master}\"\n      }\n    ],\n    \"binaryExploitation\": [\n      {\n        \"id\": \"bin1\",\n        \"title\": \"Buffer Overflow 101\",\n        \"description\": \"Exploit this program's buffer to gain a shell.\",\n        \"hint\": \"The buffer is 64 bytes long. What happens if you write more?\",\n        \"flag\": \"CTF{stack_smashed}\"\n      }\n    ]\n  };\n  \n  export default challengeData;"],"mappings":"AAAA,MAAMA,aAAa,GAAG;EAClB,iBAAiB,EAAE,CACjB;IACE,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,WAAW;IACpB,aAAa,EAAE,qEAAqE;IACpF,MAAM,EAAE,yDAAyD;IACjE,MAAM,EAAE,6BAA6B;IACrC,WAAW,EAAE,2BAA2B;IACxC,YAAY,EAAE,MAAM;IACpB,QAAQ,EAAC;EAEX,CAAC,CAEF;EACD,cAAc,EAAE,CACd;IACE,IAAI,EAAE,SAAS;IACf,OAAO,EAAE,gBAAgB;IACzB,aAAa,EAAE,gEAAgE;IAC/E,MAAM,EAAE,yDAAyD;IACjE,MAAM,EAAE,kBAAkB;IAC1B,YAAY,EAAE,MAAM;IACpB,QAAQ,EAAC;EACX,CAAC,CAEF;EACD,iBAAiB,EAAE,CACjB;IACE,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,qBAAqB;IAC9B,aAAa,EAAE,iDAAiD;IAChE,MAAM,EAAE,oCAAoC;IAC5C,MAAM,EAAE;EACV,CAAC,CACF;EACD,oBAAoB,EAAE,CACpB;IACE,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,iBAAiB;IAC1B,aAAa,EAAE,kEAAkE;IACjF,MAAM,EAAE,8DAA8D;IACtE,MAAM,EAAE;EACV,CAAC,CACF;EACD,oBAAoB,EAAE,CACpB;IACE,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,qBAAqB;IAC9B,aAAa,EAAE,gDAAgD;IAC/D,MAAM,EAAE,8DAA8D;IACtE,MAAM,EAAE;EACV,CAAC;AAEL,CAAC;AAED,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}