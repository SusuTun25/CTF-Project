{"ast":null,"code":"var _jsxFileName = \"/Users/susutun/Desktop/CTF /src/challenges/CryptographyChallenge2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\nimport ChallengeInterface from '../components/ChallengeInterface';\nimport challengeData from '../challengeData';\n\n// SHA1 implementation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SHA1(msg) {\n  function rotate_left(n, s) {\n    var t4 = n << s | n >>> 32 - s;\n    return t4;\n  }\n  ;\n  function cvt_hex(val) {\n    var str = \"\";\n    var i;\n    var v;\n    for (i = 7; i >= 0; i--) {\n      v = val >>> i * 4 & 0x0f;\n      str += v.toString(16);\n    }\n    return str;\n  }\n  ;\n  function Utf8Encode(string) {\n    string = string.replace(/\\r\\n/g, \"\\n\");\n    var utftext = \"\";\n    for (var n = 0; n < string.length; n++) {\n      var c = string.charCodeAt(n);\n      if (c < 128) {\n        utftext += String.fromCharCode(c);\n      } else if (c > 127 && c < 2048) {\n        utftext += String.fromCharCode(c >> 6 | 192);\n        utftext += String.fromCharCode(c & 63 | 128);\n      } else {\n        utftext += String.fromCharCode(c >> 12 | 224);\n        utftext += String.fromCharCode(c >> 6 & 63 | 128);\n        utftext += String.fromCharCode(c & 63 | 128);\n      }\n    }\n    return utftext;\n  }\n  ;\n  var blockstart;\n  var i, j;\n  var W = new Array(80);\n  var H0 = 0x67452301;\n  var H1 = 0xEFCDAB89;\n  var H2 = 0x98BADCFE;\n  var H3 = 0x10325476;\n  var H4 = 0xC3D2E1F0;\n  var A, B, C, D, E;\n  var temp;\n  msg = Utf8Encode(msg);\n  var msg_len = msg.length;\n  var word_array = new Array();\n  for (i = 0; i < msg_len - 3; i += 4) {\n    j = msg.charCodeAt(i) << 24 | msg.charCodeAt(i + 1) << 16 | msg.charCodeAt(i + 2) << 8 | msg.charCodeAt(i + 3);\n    word_array.push(j);\n  }\n  switch (msg_len % 4) {\n    case 0:\n      i = 0x080000000;\n      break;\n    case 1:\n      i = msg.charCodeAt(msg_len - 1) << 24 | 0x0800000;\n      break;\n    case 2:\n      i = msg.charCodeAt(msg_len - 2) << 24 | msg.charCodeAt(msg_len - 1) << 16 | 0x08000;\n      break;\n    case 3:\n      i = msg.charCodeAt(msg_len - 3) << 24 | msg.charCodeAt(msg_len - 2) << 16 | msg.charCodeAt(msg_len - 1) << 8 | 0x80;\n      break;\n  }\n  word_array.push(i);\n  while (word_array.length % 16 != 14) word_array.push(0);\n  word_array.push(msg_len >>> 29);\n  word_array.push(msg_len << 3 & 0x0ffffffff);\n  for (blockstart = 0; blockstart < word_array.length; blockstart += 16) {\n    for (i = 0; i < 16; i++) W[i] = word_array[blockstart + i];\n    for (i = 16; i <= 79; i++) W[i] = rotate_left(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n    A = H0;\n    B = H1;\n    C = H2;\n    D = H3;\n    E = H4;\n    for (i = 0; i <= 19; i++) {\n      temp = rotate_left(A, 5) + (B & C | ~B & D) + E + W[i] + 0x5A827999 & 0x0ffffffff;\n      E = D;\n      D = C;\n      C = rotate_left(B, 30);\n      B = A;\n      A = temp;\n    }\n    for (i = 20; i <= 39; i++) {\n      temp = rotate_left(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1 & 0x0ffffffff;\n      E = D;\n      D = C;\n      C = rotate_left(B, 30);\n      B = A;\n      A = temp;\n    }\n    for (i = 40; i <= 59; i++) {\n      temp = rotate_left(A, 5) + (B & C | B & D | C & D) + E + W[i] + 0x8F1BBCDC & 0x0ffffffff;\n      E = D;\n      D = C;\n      C = rotate_left(B, 30);\n      B = A;\n      A = temp;\n    }\n    for (i = 60; i <= 79; i++) {\n      temp = rotate_left(A, 5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6 & 0x0ffffffff;\n      E = D;\n      D = C;\n      C = rotate_left(B, 30);\n      B = A;\n      A = temp;\n    }\n    H0 = H0 + A & 0x0ffffffff;\n    H1 = H1 + B & 0x0ffffffff;\n    H2 = H2 + C & 0x0ffffffff;\n    H3 = H3 + D & 0x0ffffffff;\n    H4 = H4 + E & 0x0ffffffff;\n  }\n  var temp = cvt_hex(H0) + cvt_hex(H1) + cvt_hex(H2) + cvt_hex(H3) + cvt_hex(H4);\n  return temp.toLowerCase();\n}\n\n// Vulnerable HMAC-like function using SHA1\n_c = SHA1;\nconst vulnerableHMAC = (key, message) => {\n  return SHA1(key + message);\n};\n\n// Simulated server-side secret key (normally this would be kept secret)\nconst secretKey = \"Ph4nt0mK3y\";\nconst CryptographyChallenge2 = () => {\n  _s();\n  const [originalMessage, setOriginalMessage] = useState('');\n  const [originalSignature, setOriginalSignature] = useState('');\n  const [forgedMessage, setForgedMessage] = useState('');\n  const [forgedSignature, setForgedSignature] = useState('');\n  const [serverResponse, setServerResponse] = useState('');\n  const [showFlag, setShowFlag] = useState(false);\n  const challenge = challengeData.cryptography.find(c => c.id === 'crypto2');\n  useEffect(() => {\n    // Generate an initial signed message\n    const initialMessage = \"Transfer $1000 to Account #12345\";\n    const signature = vulnerableHMAC(secretKey, initialMessage);\n    setOriginalMessage(initialMessage);\n    setOriginalSignature(signature);\n  }, []);\n  const handleForgedSubmit = e => {\n    e.preventDefault();\n    // Simulate server-side verification\n    const calculatedSignature = vulnerableHMAC(secretKey, forgedMessage);\n    if (calculatedSignature === forgedSignature) {\n      setServerResponse(\"Signature verified. Message authenticated.\");\n      setShowFlag(true);\n    } else {\n      setServerResponse(\"Invalid signature. Authentication failed.\");\n    }\n  };\n  const challengeContent = /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: challenge.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: challenge.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hint:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), \" \", challenge.hint]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Original Signed Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Message: \", originalMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Signature: \", originalSignature]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleForgedSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Forged Message:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: forgedMessage,\n            onChange: e => setForgedMessage(e.target.value),\n            placeholder: \"Enter your forged message here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Forged Signature:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: forgedSignature,\n            onChange: e => setForgedSignature(e.target.value),\n            placeholder: \"Enter your forged signature here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit Forged Message and Signature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), serverResponse && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: serverResponse.includes(\"verified\") ? \"success\" : \"danger\",\n        className: \"mt-3\",\n        children: serverResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), showFlag && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        className: \"mt-3\",\n        children: [\"Congratulations! You've successfully forged a valid signature. The flag is: \", challenge.flag]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ChallengeInterface, {\n    challenge: challenge,\n    children: challengeContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptographyChallenge2, \"Bwrge57lOXF86AVWZgUd1Rf9rkk=\");\n_c2 = CryptographyChallenge2;\nexport default CryptographyChallenge2;\nvar _c, _c2;\n$RefreshReg$(_c, \"SHA1\");\n$RefreshReg$(_c2, \"CryptographyChallenge2\");","map":{"version":3,"names":["React","useState","useEffect","Card","Form","Button","Alert","ChallengeInterface","challengeData","jsxDEV","_jsxDEV","SHA1","msg","rotate_left","n","s","t4","cvt_hex","val","str","i","v","toString","Utf8Encode","string","replace","utftext","length","c","charCodeAt","String","fromCharCode","blockstart","j","W","Array","H0","H1","H2","H3","H4","A","B","C","D","E","temp","msg_len","word_array","push","toLowerCase","_c","vulnerableHMAC","key","message","secretKey","CryptographyChallenge2","_s","originalMessage","setOriginalMessage","originalSignature","setOriginalSignature","forgedMessage","setForgedMessage","forgedSignature","setForgedSignature","serverResponse","setServerResponse","showFlag","setShowFlag","challenge","cryptography","find","id","initialMessage","signature","handleForgedSubmit","e","preventDefault","calculatedSignature","challengeContent","className","children","Body","Title","title","fileName","_jsxFileName","lineNumber","columnNumber","Text","description","variant","hint","onSubmit","Group","Label","Control","type","value","onChange","target","placeholder","includes","flag","_c2","$RefreshReg$"],"sources":["/Users/susutun/Desktop/CTF /src/challenges/CryptographyChallenge2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\nimport ChallengeInterface from '../components/ChallengeInterface';\nimport challengeData from '../challengeData';\n\n// SHA1 implementation\nfunction SHA1(msg) {\n  function rotate_left(n,s) {\n    var t4 = ( n<<s ) | (n>>>(32-s));\n    return t4;\n  };\n  function cvt_hex(val) {\n    var str=\"\";\n    var i;\n    var v;\n    for( i=7; i>=0; i-- ) {\n      v = (val>>>(i*4))&0x0f;\n      str += v.toString(16);\n    }\n    return str;\n  };\n  function Utf8Encode(string) {\n    string = string.replace(/\\r\\n/g,\"\\n\");\n    var utftext = \"\";\n    for (var n = 0; n < string.length; n++) {\n      var c = string.charCodeAt(n);\n      if (c < 128) {\n        utftext += String.fromCharCode(c);\n      }\n      else if((c > 127) && (c < 2048)) {\n        utftext += String.fromCharCode((c >> 6) | 192);\n        utftext += String.fromCharCode((c & 63) | 128);\n      }\n      else {\n        utftext += String.fromCharCode((c >> 12) | 224);\n        utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n        utftext += String.fromCharCode((c & 63) | 128);\n      }\n    }\n    return utftext;\n  };\n  var blockstart;\n  var i, j;\n  var W = new Array(80);\n  var H0 = 0x67452301;\n  var H1 = 0xEFCDAB89;\n  var H2 = 0x98BADCFE;\n  var H3 = 0x10325476;\n  var H4 = 0xC3D2E1F0;\n  var A, B, C, D, E;\n  var temp;\n  msg = Utf8Encode(msg);\n  var msg_len = msg.length;\n  var word_array = new Array();\n  for( i=0; i<msg_len-3; i+=4 ) {\n    j = msg.charCodeAt(i)<<24 | msg.charCodeAt(i+1)<<16 |\n    msg.charCodeAt(i+2)<<8 | msg.charCodeAt(i+3);\n    word_array.push( j );\n  }\n  switch( msg_len % 4 ) {\n    case 0:\n      i = 0x080000000;\n    break;\n    case 1:\n      i = msg.charCodeAt(msg_len-1)<<24 | 0x0800000;\n    break;\n    case 2:\n      i = msg.charCodeAt(msg_len-2)<<24 | msg.charCodeAt(msg_len-1)<<16 | 0x08000;\n    break;\n    case 3:\n      i = msg.charCodeAt(msg_len-3)<<24 | msg.charCodeAt(msg_len-2)<<16 | msg.charCodeAt(msg_len-1)<<8 | 0x80;\n    break;\n  }\n  word_array.push( i );\n  while( (word_array.length % 16) != 14 ) word_array.push( 0 );\n  word_array.push( msg_len>>>29 );\n  word_array.push( (msg_len<<3)&0x0ffffffff );\n  for ( blockstart=0; blockstart<word_array.length; blockstart+=16 ) {\n    for( i=0; i<16; i++ ) W[i] = word_array[blockstart+i];\n    for( i=16; i<=79; i++ ) W[i] = rotate_left(W[i-3] ^ W[i-8] ^ W[i-14] ^ W[i-16], 1);\n    A = H0;\n    B = H1;\n    C = H2;\n    D = H3;\n    E = H4;\n    for( i= 0; i<=19; i++ ) {\n      temp = (rotate_left(A,5) + ((B&C) | (~B&D)) + E + W[i] + 0x5A827999) & 0x0ffffffff;\n      E = D;\n      D = C;\n      C = rotate_left(B,30);\n      B = A;\n      A = temp;\n    }\n    for( i=20; i<=39; i++ ) {\n      temp = (rotate_left(A,5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1) & 0x0ffffffff;\n      E = D;\n      D = C;\n      C = rotate_left(B,30);\n      B = A;\n      A = temp;\n    }\n    for( i=40; i<=59; i++ ) {\n      temp = (rotate_left(A,5) + ((B&C) | (B&D) | (C&D)) + E + W[i] + 0x8F1BBCDC) & 0x0ffffffff;\n      E = D;\n      D = C;\n      C = rotate_left(B,30);\n      B = A;\n      A = temp;\n    }\n    for( i=60; i<=79; i++ ) {\n      temp = (rotate_left(A,5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6) & 0x0ffffffff;\n      E = D;\n      D = C;\n      C = rotate_left(B,30);\n      B = A;\n      A = temp;\n    }\n    H0 = (H0 + A) & 0x0ffffffff;\n    H1 = (H1 + B) & 0x0ffffffff;\n    H2 = (H2 + C) & 0x0ffffffff;\n    H3 = (H3 + D) & 0x0ffffffff;\n    H4 = (H4 + E) & 0x0ffffffff;\n  }\n  var temp = cvt_hex(H0) + cvt_hex(H1) + cvt_hex(H2) + cvt_hex(H3) + cvt_hex(H4);\n  return temp.toLowerCase();\n}\n\n// Vulnerable HMAC-like function using SHA1\nconst vulnerableHMAC = (key, message) => {\n  return SHA1(key + message);\n};\n\n// Simulated server-side secret key (normally this would be kept secret)\nconst secretKey = \"Ph4nt0mK3y\";\n\nconst CryptographyChallenge2 = () => {\n  const [originalMessage, setOriginalMessage] = useState('');\n  const [originalSignature, setOriginalSignature] = useState('');\n  const [forgedMessage, setForgedMessage] = useState('');\n  const [forgedSignature, setForgedSignature] = useState('');\n  const [serverResponse, setServerResponse] = useState('');\n  const [showFlag, setShowFlag] = useState(false);\n  \n  const challenge = challengeData.cryptography.find(c => c.id === 'crypto2');\n\n  useEffect(() => {\n    // Generate an initial signed message\n    const initialMessage = \"Transfer $1000 to Account #12345\";\n    const signature = vulnerableHMAC(secretKey, initialMessage);\n    setOriginalMessage(initialMessage);\n    setOriginalSignature(signature);\n  }, []);\n\n  const handleForgedSubmit = (e) => {\n    e.preventDefault();\n    // Simulate server-side verification\n    const calculatedSignature = vulnerableHMAC(secretKey, forgedMessage);\n    if (calculatedSignature === forgedSignature) {\n      setServerResponse(\"Signature verified. Message authenticated.\");\n      setShowFlag(true);\n    } else {\n      setServerResponse(\"Invalid signature. Authentication failed.\");\n    }\n  };\n\n  const challengeContent = (\n    <Card className=\"mt-4\">\n      <Card.Body>\n        <Card.Title>{challenge.title}</Card.Title>\n        <Card.Text>{challenge.description}</Card.Text>\n        <Alert variant=\"info\">\n          <strong>Hint:</strong> {challenge.hint}\n        </Alert>\n        \n        <h5>Original Signed Message:</h5>\n        <p>Message: {originalMessage}</p>\n        <p>Signature: {originalSignature}</p>\n        \n        <Form onSubmit={handleForgedSubmit}>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Forged Message:</Form.Label>\n            <Form.Control \n              type=\"text\" \n              value={forgedMessage}\n              onChange={(e) => setForgedMessage(e.target.value)}\n              placeholder=\"Enter your forged message here\"\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Forged Signature:</Form.Label>\n            <Form.Control \n              type=\"text\" \n              value={forgedSignature}\n              onChange={(e) => setForgedSignature(e.target.value)}\n              placeholder=\"Enter your forged signature here\"\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit Forged Message and Signature\n          </Button>\n        </Form>\n        \n        {serverResponse && (\n          <Alert variant={serverResponse.includes(\"verified\") ? \"success\" : \"danger\"} className=\"mt-3\">\n            {serverResponse}\n          </Alert>\n        )}\n        \n        {showFlag && (\n          <Alert variant=\"success\" className=\"mt-3\">\n            Congratulations! You've successfully forged a valid signature. The flag is: {challenge.flag}\n          </Alert>\n        )}\n      </Card.Body>\n    </Card>\n  );\n\n  return (\n    <ChallengeInterface challenge={challenge}>\n      {challengeContent}\n    </ChallengeInterface>\n  );\n};\n\nexport default CryptographyChallenge2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}