{"ast":null,"code":"var _jsxFileName = \"/Users/susutun/Desktop/CTF /src/challenges/CryptographyChallenge2.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\nimport ChallengeInterface from '../components/ChallengeInterface';\nimport challengeData from '../challengeData';\n\n// Simplified Keccak-224 implementation (for demonstration purposes)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Keccak224(input) {\n  let hash = 0;\n  const inputBytes = new TextEncoder().encode(input);\n  for (let i = 0; i < inputBytes.length; i++) {\n    hash = hash << 8 | inputBytes[i];\n    hash ^= hash >>> 13;\n    hash = (hash << 5) - hash & 0xFFFFFFFF; // Ensure 32-bit integer\n  }\n  // Convert to hexadecimal and pad to 56 characters (224 bits)\n  return ('00000000' + hash.toString(16)).slice(-8).padStart(56, '0');\n}\n_c = Keccak224;\nconst CryptographyChallenge2 = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [token, setToken] = useState('');\n  const [serverResponse, setServerResponse] = useState('');\n  const [showFlag, setShowFlag] = useState(false);\n  const challenge = challengeData.cryptography.find(c => c.id === 'crypto2');\n\n  // Simulated server-side secret\n  const serverSecret = \"SuperSecretKey123!@#\";\n  const generateToken = (username, isAdmin) => {\n    const adminFlag = isAdmin ? '1' : '0';\n    return `${username}:${adminFlag}:${Keccak224(username + adminFlag + serverSecret)}`;\n  };\n  const handleLogin = e => {\n    e.preventDefault();\n    // Simulate server-side login logic\n    if (username === 'regularUser' && password === 'password123') {\n      const newToken = generateToken(username, false);\n      setToken(newToken);\n      setServerResponse(\"Login successful. Token generated.\");\n    } else {\n      setServerResponse(\"Invalid credentials.\");\n    }\n  };\n  const handleAdminAccess = e => {\n    e.preventDefault();\n    // Simulate server-side token verification\n    const [tokenUsername, isAdmin, tokenHash] = token.split(':');\n    const computedHash = Keccak224(tokenUsername + isAdmin + serverSecret);\n    if (tokenHash === computedHash) {\n      if (isAdmin === '1') {\n        setServerResponse(\"Admin access granted!\");\n        setShowFlag(true);\n      } else {\n        setServerResponse(\"Access denied. User is not an admin.\");\n      }\n    } else {\n      setServerResponse(\"Invalid token.\");\n    }\n  };\n  const challengeContent = /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: challenge.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: challenge.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hint:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), \" \", challenge.hint]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            placeholder: \"Enter username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Enter password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), token && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Generated Token:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleAdminAccess,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Access Token:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: token,\n              onChange: e => setToken(e.target.value),\n              placeholder: \"Enter or modify your access token\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            children: \"Access Admin Panel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), serverResponse && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: serverResponse.includes(\"granted\") ? \"success\" : \"danger\",\n        className: \"mt-3\",\n        children: serverResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), showFlag && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        className: \"mt-3\",\n        children: [\"Congratulations! You've successfully bypassed the authentication. The flag is: \", challenge.flag]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ChallengeInterface, {\n    challenge: challenge,\n    children: challengeContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptographyChallenge2, \"53AcHnXTJb/3kCF0OgGtMP9pfjs=\");\n_c2 = CryptographyChallenge2;\nexport default CryptographyChallenge2;\nvar _c, _c2;\n$RefreshReg$(_c, \"Keccak224\");\n$RefreshReg$(_c2, \"CryptographyChallenge2\");","map":{"version":3,"names":["React","useState","Card","Form","Button","Alert","ChallengeInterface","challengeData","jsxDEV","_jsxDEV","Keccak224","input","hash","inputBytes","TextEncoder","encode","i","length","toString","slice","padStart","_c","CryptographyChallenge2","_s","username","setUsername","password","setPassword","token","setToken","serverResponse","setServerResponse","showFlag","setShowFlag","challenge","cryptography","find","c","id","serverSecret","generateToken","isAdmin","adminFlag","handleLogin","e","preventDefault","newToken","handleAdminAccess","tokenUsername","tokenHash","split","computedHash","challengeContent","className","children","Body","Title","title","fileName","_jsxFileName","lineNumber","columnNumber","Text","description","variant","hint","onSubmit","Group","Label","Control","type","value","onChange","target","placeholder","includes","flag","_c2","$RefreshReg$"],"sources":["/Users/susutun/Desktop/CTF /src/challenges/CryptographyChallenge2.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\nimport ChallengeInterface from '../components/ChallengeInterface';\nimport challengeData from '../challengeData';\n\n// Simplified Keccak-224 implementation (for demonstration purposes)\nfunction Keccak224(input) {\n  let hash = 0;\n  const inputBytes = new TextEncoder().encode(input);\n  for (let i = 0; i < inputBytes.length; i++) {\n    hash = (hash << 8) | inputBytes[i];\n    hash ^= (hash >>> 13);\n    hash = ((hash << 5) - hash) & 0xFFFFFFFF;  // Ensure 32-bit integer\n  }\n  // Convert to hexadecimal and pad to 56 characters (224 bits)\n  return ('00000000' + hash.toString(16)).slice(-8).padStart(56, '0');\n}\n\nconst CryptographyChallenge2 = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [token, setToken] = useState('');\n  const [serverResponse, setServerResponse] = useState('');\n  const [showFlag, setShowFlag] = useState(false);\n  \n  const challenge = challengeData.cryptography.find(c => c.id === 'crypto2');\n\n  // Simulated server-side secret\n  const serverSecret = \"SuperSecretKey123!@#\";\n\n  const generateToken = (username, isAdmin) => {\n    const adminFlag = isAdmin ? '1' : '0';\n    return `${username}:${adminFlag}:${Keccak224(username + adminFlag + serverSecret)}`;\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    // Simulate server-side login logic\n    if (username === 'regularUser' && password === 'password123') {\n      const newToken = generateToken(username, false);\n      setToken(newToken);\n      setServerResponse(\"Login successful. Token generated.\");\n    } else {\n      setServerResponse(\"Invalid credentials.\");\n    }\n  };\n\n  const handleAdminAccess = (e) => {\n    e.preventDefault();\n    // Simulate server-side token verification\n    const [tokenUsername, isAdmin, tokenHash] = token.split(':');\n    const computedHash = Keccak224(tokenUsername + isAdmin + serverSecret);\n    \n    if (tokenHash === computedHash) {\n      if (isAdmin === '1') {\n        setServerResponse(\"Admin access granted!\");\n        setShowFlag(true);\n      } else {\n        setServerResponse(\"Access denied. User is not an admin.\");\n      }\n    } else {\n      setServerResponse(\"Invalid token.\");\n    }\n  };\n\n  const challengeContent = (\n    <Card className=\"mt-4\">\n      <Card.Body>\n        <Card.Title>{challenge.title}</Card.Title>\n        <Card.Text>{challenge.description}</Card.Text>\n        <Alert variant=\"info\">\n          <strong>Hint:</strong> {challenge.hint}\n        </Alert>\n        \n        <Form onSubmit={handleLogin}>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Username:</Form.Label>\n            <Form.Control \n              type=\"text\" \n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              placeholder=\"Enter username\"\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Password:</Form.Label>\n            <Form.Control \n              type=\"password\" \n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Enter password\"\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Login\n          </Button>\n        </Form>\n        \n        {token && (\n          <div className=\"mt-3\">\n            <h5>Generated Token:</h5>\n            <p>{token}</p>\n            <Form onSubmit={handleAdminAccess}>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Access Token:</Form.Label>\n                <Form.Control \n                  type=\"text\" \n                  value={token}\n                  onChange={(e) => setToken(e.target.value)}\n                  placeholder=\"Enter or modify your access token\"\n                />\n              </Form.Group>\n              <Button variant=\"success\" type=\"submit\">\n                Access Admin Panel\n              </Button>\n            </Form>\n          </div>\n        )}\n        \n        {serverResponse && (\n          <Alert variant={serverResponse.includes(\"granted\") ? \"success\" : \"danger\"} className=\"mt-3\">\n            {serverResponse}\n          </Alert>\n        )}\n        \n        {showFlag && (\n          <Alert variant=\"success\" className=\"mt-3\">\n            Congratulations! You've successfully bypassed the authentication. The flag is: {challenge.flag}\n          </Alert>\n        )}\n      </Card.Body>\n    </Card>\n  );\n\n  return (\n    <ChallengeInterface challenge={challenge}>\n      {challengeContent}\n    </ChallengeInterface>\n  );\n};\n\nexport default CryptographyChallenge2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}